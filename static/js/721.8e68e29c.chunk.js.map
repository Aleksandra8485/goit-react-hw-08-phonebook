{"version":3,"file":"static/js/721.8e68e29c.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","pages/contactsPage.jsx"],"sourcesContent":["export const selectLoading = state => state.contacts.loading;\n\nexport const selectFilter = state => state.contacts.filter;\n\nexport const selectAllTasks = state => state.contacts.items;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ContactForm_container__qpJ1N\",\"form\":\"ContactForm_form__dhl+T\",\"addContactBtn\":\"ContactForm_addContactBtn__3KI6e\",\"input\":\"ContactForm_input__Bl93P\"};","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { saveContact } from '../../redux/contacts/operations';\nimport styles from './ContactForm.module.css';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    // sprawdzenie czy są puste pola\n    if (name.trim() === '' || number.trim() === '') {\n      return;\n    }\n\n    // wywołanie akcji `saveContact`\n    dispatch(saveContact({ name, number }));\n\n    //resetowanie formularza po dodaniu kontaktu\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <div className={styles.container}>\n      <form className={styles.form} onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          placeholder=\"Name\"\n          value={name}\n          name=\"name\"\n          pattern=\"^[a-zA-Z]+(\\s[a-zA-Z]+)?$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={e => setName(e.target.value)}\n          className={styles.input}\n        />\n        <input\n          type=\"text\"\n          placeholder=\"Phone Number\"\n          value={number}\n          // pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={e => setNumber(e.target.value)}\n          className={styles.input}\n        />\n        <button className={styles.addContactBtn} type=\"submit\">\n          Add Contact\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default ContactForm;\n\n// const ContactForm = () => {\n//   const [name, setName] = useState('');\n//   const [number, setNumber] = useState('');\n\n//   const handleSubmit = async e => {\n//     e.preventDefault();\n\n//     // Wprowadzenie walidacji dla imienia\n//     const namePattern = /^[A-Za-z.'\\- ]+$/;\n//     if (!namePattern.test(name)) {\n//       alert(\n//         'Invalid name. Please use only letters, spaces, apostrophes, hyphens, and dots.'\n//       );\n//       return;\n//     }\n\n//     // Wprowadzenie walidacji dla numeru telefonu\n//     const numberPattern =\n//       /^\\+?\\d{1,4}?\\s?\\(?\\d{1,4}?\\)?\\s?\\d{1,4}\\s?\\d{1,4}\\s?\\d{1,9}$/;\n//     if (!numberPattern.test(number)) {\n//       alert('Invalid phone number. Please use a valid phone number format.');\n//       return;\n//     }\n//     try {\n//       const response = await axios.post(\n//         'https://connections-api.herokuapp.com/contacts',\n//         { name, number }\n//       );\n\n//       // Wykonaj jakieś akcje po dodaniu kontaktu, np. wyświetlenie potwierdzenia\n//       console.log('Contact added:', response.data);\n//     } catch (error) {\n//       // Obsługa błędu, np. wyświetlenie komunikatu o nieudanym dodaniu kontaktu\n//       console.error(error);\n//     }\n//     //resetowanie formularza po dodaniu kontaktu\n//     setName('');\n//     setNumber('');\n//   };\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ContactList_container__hYHc3\",\"contactList\":\"ContactList_contactList__UFVCg\",\"contactItem\":\"ContactList_contactItem__ppNQ5\",\"contactName\":\"ContactList_contactName__wLcl6\",\"contactNumber\":\"ContactList_contactNumber__aD17w\",\"deleteBtn\":\"ContactList_deleteBtn__1dg25\"};","import React, { useEffect } from 'react';\n// import axios from 'axios';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts, deleteContact } from '../../redux/contacts/operations';\nimport styles from './ContactList.module.css';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(state => state.contacts.contacts);\n  const filter = useSelector(state => state.contacts.filter);\n\n  useEffect(() => {\n    const fetchContactsFromBackend = async () => {\n      dispatch(fetchContacts()); // Pobieranie kontaktów z backendu przy montowaniu komponentu\n    };\n\n    fetchContactsFromBackend(); // Pobieranie kontaktów z backendu przy montowaniu komponentu\n  }, [dispatch]);\n\n  //filtrowanie kontaktów na podstawie wartości filtra\n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  const handleDelete = contactId => {\n    dispatch(deleteContact(contactId));\n  };\n\n  return (\n    <div className={styles.container}>\n      <ul className={styles.contactList}>\n        {filteredContacts.map(contact => (\n          <li key={contact.id} className={styles.contactItem}>\n            <span className={styles.contactName}>{contact.name}</span>\n            <span className={styles.contactNumber}>{contact.number}</span>\n            <button\n              className={styles.deleteBtn}\n              onClick={() => handleDelete(contact.id)}\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default ContactList;\n\n//   useEffect(() => {\n//     const fetchContactsFromBackend = async () => {\n//       const token = getTokenFromLocalStorage(); // Pobierz token JWT z Local Storage\n\n//       // Ustaw token JWT w nagłówku żądania\n//       setAuthToken(token);\n\n//       dispatch(fetchContacts()); // Pobieranie kontaktów z backendu przy montowaniu komponentu\n//     };\n\n//     fetchContactsFromBackend(); // Pobieranie kontaktów z backendu przy montowaniu komponentu\n//   }, [dispatch]);\n\n//   const getTokenFromLocalStorage = () => {\n//     return localStorage.getItem('token');\n//   };\n\n//   const setAuthToken = token => {\n//     if (token) {\n//       axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n//     } else {\n//       delete axios.defaults.headers.common['Authorization'];\n//     }\n//   };\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Filter_container__L5eml\",\"input\":\"Filter_input__N7T3z\"};","import React from 'react';\nimport styles from './Filter.module.css';\n\nconst Filter = ({ filter, handleFilterChange }) => {\n  return (\n    <div className={styles.container}>\n      <input\n        className={styles.input}\n        type=\"text\"\n        placeholder=\"Search contacts...\"\n        value={filter}\n        onChange={handleFilterChange}\n      />\n    </div>\n  );\n};\n\nexport default Filter;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectLoading, selectFilter } from 'redux/contacts/selectors';\nimport ContactForm from '../components/ContactForm/ContactForm';\nimport ContactList from '../components/ContactList/ContactList';\nimport Filter from '../components/Filter/Filter';\nimport { setFilter } from '../redux/contacts/contactsSlice';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n  const filter = useSelector(selectFilter);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const handleFilterChange = event => {\n    dispatch(setFilter(event.target.value));\n  };\n\n  return (\n    <>\n      <Helmet>\n        <title>Your tasks</title>\n      </Helmet>\n\n      <div>{isLoading && 'Request in progress...'}</div>\n      <ContactForm />\n      <Filter filter={filter} handleFilterChange={handleFilterChange} />\n      <ContactList />\n    </>\n  );\n}\n"],"names":["selectLoading","state","contacts","loading","selectFilter","filter","dispatch","useDispatch","useState","name","setName","number","setNumber","className","styles","onSubmit","event","preventDefault","trim","saveContact","type","placeholder","value","pattern","title","required","onChange","e","target","useSelector","useEffect","fetchContactsFromBackend","fetchContacts","filteredContacts","contact","toLowerCase","includes","map","onClick","contactId","id","deleteContact","handleFilterChange","Contacts","isLoading","Helmet","setFilter"],"sourceRoot":""}